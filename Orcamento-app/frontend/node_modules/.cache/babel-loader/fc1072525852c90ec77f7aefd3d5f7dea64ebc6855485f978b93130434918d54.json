{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{authApi}from'../services/api';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[token,setToken]=useState(localStorage.getItem('adminToken'));useEffect(()=>{const validateStoredToken=async()=>{if(token){const isValid=await authApi.validateToken();if(!isValid){setToken(null);localStorage.removeItem('adminToken');setIsAuthenticated(false);}else{setIsAuthenticated(true);}}};validateStoredToken();},[token]);const login=async(username,password)=>{try{const loginRequest={username,password};const response=await authApi.login(loginRequest);if(response.success&&response.token){setToken(response.token);localStorage.setItem('adminToken',response.token);setIsAuthenticated(true);toast.success('Login successful!');return true;}else{toast.error(response.message||'Login failed');return false;}}catch(error){toast.error('Login failed. Please try again.');return false;}};const logout=()=>{if(token){authApi.logout().catch(console.error);}setToken(null);localStorage.removeItem('adminToken');setIsAuthenticated(false);toast.success('Logged out successfully');};const value={isAuthenticated,token,login,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authApi","toast","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","token","setToken","localStorage","getItem","validateStoredToken","isValid","validateToken","removeItem","login","username","password","loginRequest","response","success","setItem","error","message","logout","catch","console","value","Provider","useAuth","context","Error"],"sources":["D:/Dados/Desktop/Orcamento.app/Orcamento-app/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { AuthContextType, LoginRequest } from '../types';\r\nimport { authApi } from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [token, setToken] = useState<string | null>(localStorage.getItem('adminToken'));\r\n\r\n  useEffect(() => {\r\n    const validateStoredToken = async () => {\r\n      if (token) {\r\n        const isValid = await authApi.validateToken();\r\n        if (!isValid) {\r\n          setToken(null);\r\n          localStorage.removeItem('adminToken');\r\n          setIsAuthenticated(false);\r\n        } else {\r\n          setIsAuthenticated(true);\r\n        }\r\n      }\r\n    };\r\n\r\n    validateStoredToken();\r\n  }, [token]);\r\n\r\n  const login = async (username: string, password: string): Promise<boolean> => {\r\n    try {\r\n      const loginRequest: LoginRequest = { username, password };\r\n      const response = await authApi.login(loginRequest);\r\n      \r\n      if (response.success && response.token) {\r\n        setToken(response.token);\r\n        localStorage.setItem('adminToken', response.token);\r\n        setIsAuthenticated(true);\r\n        toast.success('Login successful!');\r\n        return true;\r\n      } else {\r\n        toast.error(response.message || 'Login failed');\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      toast.error('Login failed. Please try again.');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    if (token) {\r\n      authApi.logout().catch(console.error);\r\n    }\r\n    setToken(null);\r\n    localStorage.removeItem('adminToken');\r\n    setIsAuthenticated(false);\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    isAuthenticated,\r\n    token,\r\n    login,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}