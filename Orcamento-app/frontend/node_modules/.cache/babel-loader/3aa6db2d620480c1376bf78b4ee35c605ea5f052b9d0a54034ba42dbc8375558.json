{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8080/api';// Create axios instance\nconst apiClient=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Add auth token to requests\napiClient.interceptors.request.use(config=>{const token=localStorage.getItem('adminToken');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;});// Error interceptor\napiClient.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('adminToken');window.location.href='/admin';}return Promise.reject(error);});// Budget API\nexport const budgetApi={calculate:async inputs=>{const response=await apiClient.post('/budget/calculate',inputs);return response.data;},submit:async data=>{const response=await apiClient.post('/budget/submit',data);return response.data;},exportCsv:async inputs=>{const response=await apiClient.post('/export/csv',inputs,{responseType:'blob'});return response.data;}};// Admin API\nexport const adminApi={getCostFactors:async()=>{const response=await apiClient.get('/admin/cost-factors');return response.data;},updateCostFactors:async factors=>{const response=await apiClient.put('/admin/cost-factors',factors);return response.data;}};// Dashboard API\nexport const dashboardApi={getAllRequests:async()=>{const response=await apiClient.get('/dashboard/requests');return response.data;},getRequestsByStatus:async status=>{const response=await apiClient.get(`/dashboard/requests/status/${status}`);return response.data;},getStats:async()=>{const response=await apiClient.get('/dashboard/stats');return response.data;},updateRequestStatus:async(id,status,notes)=>{const response=await apiClient.put(`/dashboard/requests/${id}/status`,{status,notes});return response.data;},getRequestById:async id=>{const response=await apiClient.get(`/dashboard/requests/${id}`);return response.data;}};// Auth API\nexport const authApi={login:async credentials=>{const response=await apiClient.post('/auth/login',credentials);return response.data;},logout:async()=>{await apiClient.post('/auth/logout');},validateToken:async()=>{try{const response=await apiClient.get('/auth/validate');return response.data;}catch{return false;}}};export default apiClient;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","budgetApi","calculate","inputs","post","data","submit","exportCsv","responseType","adminApi","getCostFactors","get","updateCostFactors","factors","put","dashboardApi","getAllRequests","getRequestsByStatus","getStats","updateRequestStatus","id","notes","getRequestById","authApi","login","credentials","logout","validateToken"],"sources":["D:/Dados/Desktop/Orcamento.app/Orcamento-app/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { \r\n  BudgetInputs, \r\n  BudgetResponse, \r\n  CostFactors, \r\n  LoginRequest, \r\n  LoginResponse,\r\n  BudgetRequest,\r\n  DashboardStats\r\n} from '../types';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\r\n\r\n// Create axios instance\r\nconst apiClient = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add auth token to requests\r\napiClient.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('adminToken');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Error interceptor\r\napiClient.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('adminToken');\r\n      window.location.href = '/admin';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Budget API\r\nexport const budgetApi = {\r\n  calculate: async (inputs: BudgetInputs): Promise<BudgetResponse> => {\r\n    const response = await apiClient.post('/budget/calculate', inputs);\r\n    return response.data;\r\n  },\r\n  \r\n  submit: async (data: any): Promise<BudgetRequest> => {\r\n    const response = await apiClient.post('/budget/submit', data);\r\n    return response.data;\r\n  },\r\n  \r\n  exportCsv: async (inputs: BudgetInputs): Promise<Blob> => {\r\n    const response = await apiClient.post('/export/csv', inputs, {\r\n      responseType: 'blob'\r\n    });\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Admin API\r\nexport const adminApi = {\r\n  getCostFactors: async (): Promise<CostFactors> => {\r\n    const response = await apiClient.get('/admin/cost-factors');\r\n    return response.data;\r\n  },\r\n  \r\n  updateCostFactors: async (factors: CostFactors): Promise<CostFactors> => {\r\n    const response = await apiClient.put('/admin/cost-factors', factors);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Dashboard API\r\nexport const dashboardApi = {\r\n  getAllRequests: async (): Promise<BudgetRequest[]> => {\r\n    const response = await apiClient.get('/dashboard/requests');\r\n    return response.data;\r\n  },\r\n  \r\n  getRequestsByStatus: async (status: string): Promise<BudgetRequest[]> => {\r\n    const response = await apiClient.get(`/dashboard/requests/status/${status}`);\r\n    return response.data;\r\n  },\r\n  \r\n  getStats: async (): Promise<DashboardStats> => {\r\n    const response = await apiClient.get('/dashboard/stats');\r\n    return response.data;\r\n  },\r\n  \r\n  updateRequestStatus: async (id: number, status: string, notes: string): Promise<BudgetRequest> => {\r\n    const response = await apiClient.put(`/dashboard/requests/${id}/status`, { status, notes });\r\n    return response.data;\r\n  },\r\n  \r\n  getRequestById: async (id: number): Promise<BudgetRequest> => {\r\n    const response = await apiClient.get(`/dashboard/requests/${id}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Auth API\r\nexport const authApi = {\r\n  login: async (credentials: LoginRequest): Promise<LoginResponse> => {\r\n    const response = await apiClient.post('/auth/login', credentials);\r\n    return response.data;\r\n  },\r\n  \r\n  logout: async (): Promise<void> => {\r\n    await apiClient.post('/auth/logout');\r\n  },\r\n  \r\n  validateToken: async (): Promise<boolean> => {\r\n    try {\r\n      const response = await apiClient.get('/auth/validate');\r\n      return response.data;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\nexport default apiClient; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAWzB,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,2BAA2B,CAEjF;AACA,KAAM,CAAAC,SAAS,CAAGL,KAAK,CAACM,MAAM,CAAC,CAC7BC,OAAO,CAAEN,YAAY,CACrBO,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAH,SAAS,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,EAAK,CAC7C,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAChD,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,CAAG,UAAUH,KAAK,EAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CAAC,CAEF;AACAP,SAAS,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAChCM,QAAQ,EAAKA,QAAQ,CACrBC,KAAK,EAAK,KAAAC,eAAA,CACT,GAAI,EAAAA,eAAA,CAAAD,KAAK,CAACD,QAAQ,UAAAE,eAAA,iBAAdA,eAAA,CAAgBC,MAAM,IAAK,GAAG,CAAE,CAClCN,YAAY,CAACO,UAAU,CAAC,YAAY,CAAC,CACrCC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CACjC,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAS,SAAS,CAAG,CACvBC,SAAS,CAAE,KAAO,CAAAC,MAAoB,EAA8B,CAClE,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAZ,SAAS,CAACyB,IAAI,CAAC,mBAAmB,CAAED,MAAM,CAAC,CAClE,MAAO,CAAAZ,QAAQ,CAACc,IAAI,CACtB,CAAC,CAEDC,MAAM,CAAE,KAAO,CAAAD,IAAS,EAA6B,CACnD,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAZ,SAAS,CAACyB,IAAI,CAAC,gBAAgB,CAAEC,IAAI,CAAC,CAC7D,MAAO,CAAAd,QAAQ,CAACc,IAAI,CACtB,CAAC,CAEDE,SAAS,CAAE,KAAO,CAAAJ,MAAoB,EAAoB,CACxD,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAZ,SAAS,CAACyB,IAAI,CAAC,aAAa,CAAED,MAAM,CAAE,CAC3DK,YAAY,CAAE,MAChB,CAAC,CAAC,CACF,MAAO,CAAAjB,QAAQ,CAACc,IAAI,CACtB,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,QAAQ,CAAG,CACtBC,cAAc,CAAE,KAAAA,CAAA,GAAkC,CAChD,KAAM,CAAAnB,QAAQ,CAAG,KAAM,CAAAZ,SAAS,CAACgC,GAAG,CAAC,qBAAqB,CAAC,CAC3D,MAAO,CAAApB,QAAQ,CAACc,IAAI,CACtB,CAAC,CAEDO,iBAAiB,CAAE,KAAO,CAAAC,OAAoB,EAA2B,CACvE,KAAM,CAAAtB,QAAQ,CAAG,KAAM,CAAAZ,SAAS,CAACmC,GAAG,CAAC,qBAAqB,CAAED,OAAO,CAAC,CACpE,MAAO,CAAAtB,QAAQ,CAACc,IAAI,CACtB,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAU,YAAY,CAAG,CAC1BC,cAAc,CAAE,KAAAA,CAAA,GAAsC,CACpD,KAAM,CAAAzB,QAAQ,CAAG,KAAM,CAAAZ,SAAS,CAACgC,GAAG,CAAC,qBAAqB,CAAC,CAC3D,MAAO,CAAApB,QAAQ,CAACc,IAAI,CACtB,CAAC,CAEDY,mBAAmB,CAAE,KAAO,CAAAvB,MAAc,EAA+B,CACvE,KAAM,CAAAH,QAAQ,CAAG,KAAM,CAAAZ,SAAS,CAACgC,GAAG,CAAC,8BAA8BjB,MAAM,EAAE,CAAC,CAC5E,MAAO,CAAAH,QAAQ,CAACc,IAAI,CACtB,CAAC,CAEDa,QAAQ,CAAE,KAAAA,CAAA,GAAqC,CAC7C,KAAM,CAAA3B,QAAQ,CAAG,KAAM,CAAAZ,SAAS,CAACgC,GAAG,CAAC,kBAAkB,CAAC,CACxD,MAAO,CAAApB,QAAQ,CAACc,IAAI,CACtB,CAAC,CAEDc,mBAAmB,CAAE,KAAAA,CAAOC,EAAU,CAAE1B,MAAc,CAAE2B,KAAa,GAA6B,CAChG,KAAM,CAAA9B,QAAQ,CAAG,KAAM,CAAAZ,SAAS,CAACmC,GAAG,CAAC,uBAAuBM,EAAE,SAAS,CAAE,CAAE1B,MAAM,CAAE2B,KAAM,CAAC,CAAC,CAC3F,MAAO,CAAA9B,QAAQ,CAACc,IAAI,CACtB,CAAC,CAEDiB,cAAc,CAAE,KAAO,CAAAF,EAAU,EAA6B,CAC5D,KAAM,CAAA7B,QAAQ,CAAG,KAAM,CAAAZ,SAAS,CAACgC,GAAG,CAAC,uBAAuBS,EAAE,EAAE,CAAC,CACjE,MAAO,CAAA7B,QAAQ,CAACc,IAAI,CACtB,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAkB,OAAO,CAAG,CACrBC,KAAK,CAAE,KAAO,CAAAC,WAAyB,EAA6B,CAClE,KAAM,CAAAlC,QAAQ,CAAG,KAAM,CAAAZ,SAAS,CAACyB,IAAI,CAAC,aAAa,CAAEqB,WAAW,CAAC,CACjE,MAAO,CAAAlC,QAAQ,CAACc,IAAI,CACtB,CAAC,CAEDqB,MAAM,CAAE,KAAAA,CAAA,GAA2B,CACjC,KAAM,CAAA/C,SAAS,CAACyB,IAAI,CAAC,cAAc,CAAC,CACtC,CAAC,CAEDuB,aAAa,CAAE,KAAAA,CAAA,GAA8B,CAC3C,GAAI,CACF,KAAM,CAAApC,QAAQ,CAAG,KAAM,CAAAZ,SAAS,CAACgC,GAAG,CAAC,gBAAgB,CAAC,CACtD,MAAO,CAAApB,QAAQ,CAACc,IAAI,CACtB,CAAE,KAAM,CACN,MAAO,MAAK,CACd,CACF,CACF,CAAC,CAED,cAAe,CAAA1B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}