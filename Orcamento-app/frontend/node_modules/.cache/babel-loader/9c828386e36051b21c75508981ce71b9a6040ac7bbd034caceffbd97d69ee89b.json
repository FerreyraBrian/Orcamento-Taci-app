{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\n// Create axios instance\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('adminToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Error interceptor\napiClient.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('adminToken');\n    window.location.href = '/admin';\n  }\n  return Promise.reject(error);\n});\n\n// Budget API\nexport const budgetApi = {\n  calculate: async inputs => {\n    const response = await apiClient.post('/budget/calculate', inputs);\n    return response.data;\n  },\n  submit: async data => {\n    const response = await apiClient.post('/budget/submit', data);\n    return response.data;\n  },\n  exportCsv: async inputs => {\n    const response = await apiClient.post('/export/csv', inputs, {\n      responseType: 'blob'\n    });\n    return response.data;\n  }\n};\n\n// Admin API\nexport const adminApi = {\n  getCostFactors: async () => {\n    const response = await apiClient.get('/admin/cost-factors');\n    return response.data;\n  },\n  updateCostFactors: async factors => {\n    const response = await apiClient.put('/admin/cost-factors', factors);\n    return response.data;\n  }\n};\n\n// Auth API\nexport const authApi = {\n  login: async credentials => {\n    const response = await apiClient.post('/auth/login', credentials);\n    return response.data;\n  },\n  logout: async () => {\n    await apiClient.post('/auth/logout');\n  },\n  validateToken: async () => {\n    try {\n      const response = await apiClient.get('/auth/validate');\n      return response.data;\n    } catch {\n      return false;\n    }\n  }\n};\nexport default apiClient;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","budgetApi","calculate","inputs","post","data","submit","exportCsv","responseType","adminApi","getCostFactors","get","updateCostFactors","factors","put","authApi","login","credentials","logout","validateToken"],"sources":["D:/Dados/Desktop/Orcamento.app/Orcamento-app/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { \r\n  BudgetInputs, \r\n  BudgetResponse, \r\n  CostFactors, \r\n  LoginRequest, \r\n  LoginResponse,\r\n  BudgetRequest,\r\n  DashboardStats\r\n} from '../types';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\r\n\r\n// Create axios instance\r\nconst apiClient = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add auth token to requests\r\napiClient.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('adminToken');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Error interceptor\r\napiClient.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('adminToken');\r\n      window.location.href = '/admin';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Budget API\r\nexport const budgetApi = {\r\n  calculate: async (inputs: BudgetInputs): Promise<BudgetResponse> => {\r\n    const response = await apiClient.post('/budget/calculate', inputs);\r\n    return response.data;\r\n  },\r\n  \r\n  submit: async (data: any): Promise<BudgetRequest> => {\r\n    const response = await apiClient.post('/budget/submit', data);\r\n    return response.data;\r\n  },\r\n  \r\n  exportCsv: async (inputs: BudgetInputs): Promise<Blob> => {\r\n    const response = await apiClient.post('/export/csv', inputs, {\r\n      responseType: 'blob'\r\n    });\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Admin API\r\nexport const adminApi = {\r\n  getCostFactors: async (): Promise<CostFactors> => {\r\n    const response = await apiClient.get('/admin/cost-factors');\r\n    return response.data;\r\n  },\r\n  \r\n  updateCostFactors: async (factors: CostFactors): Promise<CostFactors> => {\r\n    const response = await apiClient.put('/admin/cost-factors', factors);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Auth API\r\nexport const authApi = {\r\n  login: async (credentials: LoginRequest): Promise<LoginResponse> => {\r\n    const response = await apiClient.post('/auth/login', credentials);\r\n    return response.data;\r\n  },\r\n  \r\n  logout: async (): Promise<void> => {\r\n    await apiClient.post('/auth/logout');\r\n  },\r\n  \r\n  validateToken: async (): Promise<boolean> => {\r\n    try {\r\n      const response = await apiClient.get('/auth/validate');\r\n      return response.data;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\nexport default apiClient; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}